// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invoice {
  id         Int     @id @default(autoincrement())
  insurance String
  amount    Int
  payout    Int
  status    String @default("in progress")
  file      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

//nextauth
model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  clinic               Clinic      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         Clinic     @relation(fields: [userId], references: [id])
}
enum UserRole {
  ADMIN
  USER
}
model Clinic {
  id       String   @id @default(cuid())
  name     String
  imageUrl String?
  city     String
  country  String
  phone    String
  address  String
  email    String? @unique
  emailVerified DateTime?
  role UserRole @default(USER)
  website  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  insurances String
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Contact {
  id            Int   @id @default(autoincrement())
  firstName     String
  lastName      String
  company       String
  termOfService Boolean
  email         String
  country       String
  number        String
  productInterest String
  businessType  String
  interest      String
  message       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  message   String
  type      String   // e.g., "success", "error", "info", "warning"
  read      Boolean  @default(false)
  userId    Int      
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}